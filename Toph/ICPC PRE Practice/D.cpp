
#include<bits/stdc++.h>
using namespace std;



int sc1() {int x; scanf("%d", &x); return x;}

long long sc2() {long long x; scanf("%lld", &x); return x;}

#define  gcd(a,b)         __gcd(a,b)
#define  lcm(a,b)         (a*b)/gcd(a,b)
#define  Int              sc1()
#define  LL               sc2()
#define  For(n)           for(int i=0;i<n;i++)
#define  Forj(n)          for(int j=0;j<n;j++)
#define  Fork(n)          for(int k=0;k<n;k++)
#define  For1(n)          for(int i=1;i<=n;i++)
#define  ll               long long
#define  vi               std::vector<int>
#define  vll              std::vector<ll>
#define  qui              qu
#define  pb               push_back
#define  mpsi             std::map<string, int>


vector<vector<string> >v;

void ini()
{
	std::vector<string> s(7);
	s[0] = "01110";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "11111";
	s[4] = "10001";
	s[5] = "10001";
	s[6] = "10001";

	v.pb(s);

	//B
	s[0] = "11110";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "11110";
	s[4] = "10001";
	s[5] = "10001";
	s[6] = "11110";

	v.pb(s);

	//c

	s[0] = "01110";
	s[1] = "10001";
	s[2] = "10000";
	s[3] = "10000";
	s[4] = "10000";
	s[5] = "10001";
	s[6] = "01110";

	v.pb(s);

	//d

	s[0] = "11110";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "10001";
	s[4] = "10001";
	s[5] = "10001";
	s[6] = "11110";

	v.pb(s);

	//e

	s[0] = "11111";
	s[1] = "10000";
	s[2] = "10000";
	s[3] = "11110";
	s[4] = "10000";
	s[5] = "10000";
	s[6] = "11111";

	v.pb(s);

	//f

	s[0] = "11111";
	s[1] = "10000";
	s[2] = "10000";
	s[3] = "11110";
	s[4] = "10000";
	s[5] = "10000";
	s[6] = "10000";

	v.pb(s);
	//g
	s[0] = "01110";
	s[1] = "10001";
	s[2] = "10000";
	s[3] = "10000";
	s[4] = "10011";
	s[5] = "10001";
	s[6] = "01110";

	v.pb(s);
	//h
	s[0] = "10001";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "11111";
	s[4] = "10001";
	s[5] = "10001";
	s[6] = "10001";

	v.pb(s);

	//i
	s[0] = "01110";
	s[1] = "00100";
	s[2] = "00100";
	s[3] = "00100";
	s[4] = "00100";
	s[5] = "00100";
	s[6] = "01110";

	v.pb(s);

	//J
	s[0] = "00111";
	s[1] = "00010";
	s[2] = "00010";
	s[3] = "00010";
	s[4] = "00010";
	s[5] = "10010";
	s[6] = "01100";

	v.pb(s);

//K

	s[0] = "10001";
	s[1] = "10010";
	s[2] = "10100";
	s[3] = "11000";
	s[4] = "10100";
	s[5] = "10010";
	s[6] = "10001";

	v.pb(s);

	//L

	s[0] = "10000";
	s[1] = "10000";
	s[2] = "10000";
	s[3] = "10000";
	s[4] = "10000";
	s[5] = "10000";
	s[6] = "11111";

	v.pb(s);
//M
	s[0] = "10001";
	s[1] = "11011";
	s[2] = "10101";
	s[3] = "10101";
	s[4] = "10001";
	s[5] = "10001";
	s[6] = "10001";

	v.pb(s);

	//N
	s[0] = "10001";
	s[1] = "10001";
	s[2] = "11001";
	s[3] = "10101";
	s[4] = "10011";
	s[5] = "10001";
	s[6] = "10001";

	v.pb(s);

	//o

	s[0] = "01110";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "10001";
	s[4] = "10001";
	s[5] = "10001";
	s[6] = "01110";

	v.pb(s);

	///p
	s[0] = "11110";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "11110";
	s[4] = "10000";
	s[5] = "10000";
	s[6] = "10000";
	v.pb(s);

	///q
	s[0] = "01110";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "10001";
	s[4] = "10101";
	s[5] = "10010";
	s[6] = "01101";
	v.pb(s);

	//r
	s[0] = "11110";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "11110";
	s[4] = "10100";
	s[5] = "10010";
	s[6] = "10001";
	v.pb(s);

	///s
	s[0] = "01111";
	s[1] = "10000";
	s[2] = "10000";
	s[3] = "01110";
	s[4] = "00001";
	s[5] = "00001";
	s[6] = "11110";
	v.pb(s);
	///t
	s[0] = "11111";
	s[1] = "00100";
	s[2] = "00100";
	s[3] = "00100";
	s[4] = "00100";
	s[5] = "00100";
	s[6] = "00100";
	v.pb(s);

	///u
	s[0] = "10001";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "10001";
	s[4] = "10001";
	s[5] = "10001";
	s[6] = "01110";
	v.pb(s);

	///v
	s[0] = "10001";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "10001";
	s[4] = "01010";
	s[5] = "01010";
	s[6] = "00100";

	v.pb(s);

	///w
	s[0] = "10001";
	s[1] = "10001";
	s[2] = "10001";
	s[3] = "10101";
	s[4] = "10101";
	s[5] = "10101";
	s[6] = "01010";
	v.pb(s);

	///x
	s[0] = "10001";
	s[1] = "10001";
	s[2] = "01010";
	s[3] = "00100";
	s[4] = "01010";
	s[5] = "10001";
	s[6] = "10001";

	v.pb(s);
	///y
	s[0] = "10001";
	s[1] = "10001";
	s[2] = "01010";
	s[3] = "00100";
	s[4] = "00100";
	s[5] = "00100";
	s[6] = "00100";
	v.pb(s);

//z
	s[0] = "11111";
	s[1] = "00001";
	s[2] = "00010";
	s[3] = "00100";
	s[4] = "01000";
	s[5] = "10000";
	s[6] = "11111";

	v.pb(s);



}

string sd[7];

int cf(string a, string b)
{
	int cnt = 0;
	for (int i = 0; i < a.size(); i++)
	{
		if (a[i] == '1' && b[i] == '*') cnt++;
		if (a[i] == '0' && b[i] == '.') cnt++;
	}
	if (cnt == a.size()) return 0;
	else return 1;
}

int cmpr()
{
	for (int i = 0; i < 26; i++)
	{
		int cnt = 0;
		for (int j = 0; j < 7; j++)
		{
			if (cf(v[i][j], sd[j]) == 0) cnt++;
			//cout << v[i][j] << endl;
		}
		if(cnt == 7) return i;
	}
	return 0;
}


int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);


	ini();
	///cmpr();


	


	string a[7];

	for (int i = 0; i < 7; i++)
	{
		cin >> a[i];
	}

	int len = a[0].size();
	len++;
	int dig=len/6;



	for (int i = 0; i < len; i+=6)
	{
		for(int j=0;j<7;j++) sd[j]="";
		for(int j=0;j<7;j++)
		{
			for(int k=i;k<=i+4;k++)
			{
				sd[j]+=a[j][k];
			}
		}

		//for(int j=0;j<7;j++) cout<<sd[j]<<endl;
		//cout<<endl;

		int as=cmpr();
		//cout<<as<<endl;
		cout<<(char)((int)as+(int)'A');

	}

cout<<endl;









	return 0;
}


